function initialize(){initAutocomplete(),initMap()}function initAutocomplete(){autocomplete=new google.maps.places.Autocomplete(document.getElementById("start"),{types:["geocode"]}),autocomplete2=new google.maps.places.Autocomplete(document.getElementById("end"),{types:["geocode"]})}var placeSearch,autocomplete,componentForm={street_number:"short_name",route:"long_name",locality:"long_name",administrative_area_level_1:"short_name",country:"long_name",postal_code:"short_name"};
function initMap(){directionsDisplay=new google.maps.DirectionsRenderer;var e={zoom:12,center:new google.maps.LatLng(42.36206,-71.060257)};map=new google.maps.Map(document.getElementById("map-canvas"),e),directionsDisplay.setMap(map)}function getRoute(){directionsService=new google.maps.DirectionsService,userLocation=origin1,userDestination=origin2,startingDock=new google.maps.LatLng(startBikes[0].station_lat,startBikes[0].station_lng),endingDock=new google.maps.LatLng(endDocks[0].station_lat,endDocks[0].station_lng),waypoints.push({origin:userLocation,destination:startingDock,travelMode:google.maps.TravelMode.WALKING}),waypoints.push({origin:startingDock,destination:endingDock,travelMode:google.maps.TravelMode.BICYCLING}),waypoints.push({origin:endingDock,destination:userDestination,travelMode:google.maps.TravelMode.WALKING}),getDirections(waypoints),directionsDisplay.setPanel(document.getElementById("direction-panel"))}function getDirections(e){directionsService.route(e[0],function(e,t){t==google.maps.DirectionsStatus.OK&&(returnedDirections[0]=e.routes[0].legs[0],returnedResponses.push(e),totalDuration+=e.routes[0].legs[0].duration.value,totalDistance+=e.routes[0].legs[0].distance.value,returnedDirections[0]&&returnedDirections[1]&&returnedDirections[2]&&displayDirections())}),directionsService.route(e[1],function(e,t){t==google.maps.DirectionsStatus.OK&&(returnedDirections[1]=e.routes[0].legs[0],returnedResponses.push(e),totalDuration+=e.routes[0].legs[0].duration.value,totalDistance+=e.routes[0].legs[0].distance.value,returnedDirections[0]&&returnedDirections[1]&&returnedDirections[2]&&displayDirections())}),directionsService.route(e[2],function(e,t){console.log(e),t==google.maps.DirectionsStatus.OK&&(returnedDirections[2]=e.routes[0].legs[0],returnedResponses.push(e),totalDuration+=e.routes[0].legs[0].duration.value,totalDistance+=e.routes[0].legs[0].distance.value,returnedDirections[0]&&returnedDirections[1]&&returnedDirections[2]&&displayDirections())})}function displayDirections(){var e=[];e.push(returnedDirections[0],returnedDirections[1],returnedDirections[2]);var t=returnedResponses[1];t.routes[0].legs=e,directionsDisplay.setDirections(t),displayMetaData(formatMetaData())}function formatMetaData(){return{distance:Math.round(621371e-9*totalDistance),duration:Math.round(totalDuration/60)}}function displayMetaData(e){$("#details").removeClass("hide").addClass("show"),$("#routeDetails").removeClass("hide").addClass("show"),$("#bike-name").html(startBikes[0].station_name),$("#num-bikes").html(startBikes[0].bikes_avail),$("#distance").html(e.distance),$("#duration").html(e.duration),$("#dock-name").html(endDocks[0].station_name),$("#num-docks").html(endDocks[0].docks_avail)}var userLocation,userDestination,directionsDisplay,directionsService,returnedDirections={1:null,2:null,3:null},totalDistance=0,totalDuration=0,returnedResponses=[],waypoints=[];
function getStations(){$.get("/api/stations",function(t){}).then(function(t){stationArray=t})}function codeAddress1(){geocoder=new google.maps.Geocoder;var t=origin1;geocoder.geocode({address:t},function(t,r){"OK"==r?findDistStart(t[0].geometry.location.lat(),t[0].geometry.location.lng()):alert("Geocode was not successful for the following reason: "+r)})}function findDistStart(t,r){for(var a=0;a<stationArray.length;a++){var s=t,n=r,o=stationArray[a].lat,e=stationArray[a].lng,i=(o-s)*(Math.PI/180),d=(e-n)*(Math.PI/180),l=Math.sin(i/2)*Math.sin(i/2)+Math.cos(s*(Math.PI/180))*Math.cos(o*(Math.PI/180))*Math.sin(d/2)*Math.sin(d/2),c=3963*(2*Math.atan2(Math.sqrt(l),Math.sqrt(1-l)));startArray.push({station_id:stationArray[a].station_id,station_name:stationArray[a].name,station_lat:stationArray[a].lat,station_lng:stationArray[a].lng,distance_miles:c})}sortFunctionStart()}function sortFunctionStart(){sortedStartArray=startArray.sort(function(t,r){return t.distance_miles-r.distance_miles}),findDistSlice1()}function findDistSlice1(){slicedStartArray=sortedStartArray.slice(0,10);for(var t=0;t<slicedStartArray.length;t++){var r=new google.maps.LatLng(slicedStartArray[t].station_lat,slicedStartArray[t].station_lng),a=new google.maps.DistanceMatrixService;!function(t){a.getDistanceMatrix({origins:[origin1],destinations:[r],travelMode:"WALKING",unitSystem:google.maps.UnitSystem.IMPERIAL},function(r,a){var s=r.rows[0].elements[0].distance.text,n=s.substr(0,s.length-3);slicedStartArray[t].gmaps_miles=parseFloat(n)})}(t)}sortStartTwo()}function sortStartTwo(){sortedSlicedStartArray=slicedStartArray.sort(function(t,r){return t.gmaps_miles-r.gmaps_miles}),matchStarts()}function matchStarts(){for(var t=0;t<sortedSlicedStartArray.length;t++)for(var r=0;r<responseArray.length;r++)sortedSlicedStartArray[t].station_id===responseArray[r].station_id&&(0,sortedSlicedStartArray[t].bikes_avail=responseArray[r].bikes_avail,sortedSlicedStartArray[t].docks_avail=responseArray[r].docks_avail);console.log("sorted sliced",sortedSlicedStartArray),hasBikes()}function hasBikes(){console.log("made it");for(var t=0;t<sortedSlicedStartArray.length;t++)sortedSlicedStartArray[t].bikes_avail>0&&startBikes.push(sortedSlicedStartArray[t]);console.log("startBikes",startBikes)}function codeAddress2(){geocoder=new google.maps.Geocoder;var t=origin2;geocoder.geocode({address:t},function(t,r){"OK"==r?findDistEnd(t[0].geometry.location.lat(),t[0].geometry.location.lng()):alert("Geocode was not successful for the following reason: "+r)})}function findDistEnd(t,r){for(var a=0;a<stationArray.length;a++){var s=t,n=r,o=stationArray[a].lat,e=stationArray[a].lng,i=(o-s)*(Math.PI/180),d=(e-n)*(Math.PI/180),l=Math.sin(i/2)*Math.sin(i/2)+Math.cos(s*(Math.PI/180))*Math.cos(o*(Math.PI/180))*Math.sin(d/2)*Math.sin(d/2),c=3963*(2*Math.atan2(Math.sqrt(l),Math.sqrt(1-l)));endArray.push({station_id:stationArray[a].station_id,station_name:stationArray[a].name,station_lat:stationArray[a].lat,station_lng:stationArray[a].lng,distance_miles:c})}sortFunctionEnd()}function sortFunctionEnd(){sortedEndArray=endArray.sort(function(t,r){return t.distance_miles-r.distance_miles}),console.log("sortedEndArray",sortedEndArray),findDistSlice2()}function findDistSlice2(){slicedEndArray=sortedEndArray.slice(0,10);for(var t=0;t<slicedEndArray.length;t++){var r=new google.maps.LatLng(slicedEndArray[t].station_lat,slicedEndArray[t].station_lng),a=new google.maps.DistanceMatrixService;!function(t){a.getDistanceMatrix({origins:[origin2],destinations:[r],travelMode:"WALKING",unitSystem:google.maps.UnitSystem.IMPERIAL},function(r,a){counter++;var s=r.rows[0].elements[0].distance.text,n=s.substr(0,s.length-3);slicedEndArray[t].gmaps_miles=parseFloat(n),sortEndTwo()})}(t)}}function sortEndTwo(){counter<10||(sortedSlicedEndArray=slicedEndArray.sort(function(t,r){return t.gmaps_miles-r.gmaps_miles}),matchEnds())}function matchEnds(){for(var t=0;t<sortedSlicedEndArray.length;t++)for(var r=0;r<responseArray.length;r++)sortedSlicedEndArray[t].station_id===responseArray[r].station_id&&(0,sortedSlicedEndArray[t].bikes_avail=responseArray[r].bikes_avail,sortedSlicedEndArray[t].docks_avail=responseArray[r].docks_avail);console.log("sorted sliced end",sortedSlicedEndArray),hasDocks()}function hasDocks(){for(var t=0;t<sortedSlicedEndArray.length;t++)sortedSlicedEndArray[t].docks_avail>=1&&endDocks.push(sortedSlicedEndArray[t]);console.log("endDocks",endDocks),getRoute()}var origin1,origin2,startArray=[],endArray=[],sortedStartArray=[],sortedEndArray=[],url="https://gbfs.thehubway.com/gbfs/en/station_status.json",responseArray=[],stationArray=[],slicedStartArray=[],sortedSlicedStartArray=[],slicedEndArray=[],sortedSlicedEndArray=[],startBikes=[],endDocks=[];$("#submit").on("click",function(){origin1=$("#start").val(),console.log(origin1),origin2=$("#end").val(),codeAddress1(),codeAddress2()}),getStations(),$.ajax({url:url,method:"GET"}).done(function(t){for(var r=0;r<t.data.stations.length;r++)responseArray.push({station_id:t.data.stations[r].station_id,bikes_avail:t.data.stations[r].num_bikes_available,docks_avail:t.data.stations[r].num_docks_available})});var counter=0;